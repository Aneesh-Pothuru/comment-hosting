{"version":3,"sources":["commentstripper.gif","components/IdInput/IdInput.js","source.gif","stealing.gif","ml.mp3","App.js","reportWebVitals.js","index.js"],"names":["IdInput","storeKey","onKeyChange","onInputChange","onButtonSubmit","className","for","type","name","onChange","onClick","initialState","apiKey","videoId","loading","App","event","setState","target","value","console","log","state","audio","play","fetch","method","headers","mode","then","response","pause","Audio","song","catch","err","src","CS","alt","this","ste","load","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAAe,MAA0B,4CCiC1BA,G,MA9BC,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eACrD,OACI,8BACI,sBAAKC,UAAU,SAAf,UAEQJ,EACI,8BACI,0FAKJ,gCACI,uBAAOK,IAAI,SAAX,uBACC,uBAAOC,KAAK,OAAOC,KAAK,SAASC,SAAUP,OAGxD,gCACI,uBAAOI,IAAI,UAAX,wBACA,uBAAOC,KAAK,OAAOC,KAAK,UAAUC,SAAUN,OAEhD,wBACII,KAAK,SACLG,QAASN,EAFb,+BCxBD,MAA0B,mCCA1B,MAA0B,qCCA1B,G,MAAA,IAA0B,gCCQnCO,EAAe,CACnBC,OAAQ,GACRC,QAAS,GACTC,QAAS,GACTb,UAAU,GA4DGc,E,kDAxDb,aAAe,IAAD,8BACZ,gBAKFb,YAAc,SAACc,GACb,EAAKC,SAAS,CAAEL,OAAQI,EAAME,OAAOC,QACrCC,QAAQC,IAAI,EAAKC,QARL,EAWdnB,cAAgB,SAACa,GACf,EAAKC,SAAS,CAAEJ,QAASG,EAAME,OAAOC,QACtCC,QAAQC,IAAI,EAAKC,QAbL,EAgBdlB,eAAiB,WACf,EAAKa,SAAS,CAAEH,SAAS,IACzB,EAAKS,MAAMC,OACXC,MAAM,iCAAmC,EAAKH,MAAMT,QAAU,IAAM,EAAKS,MAAMV,OAAQ,CACrFc,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAM,SACLC,MAAK,SAAAC,GACNV,QAAQC,IAAIS,GACZ,EAAKb,SAAS,CAAEH,SAAS,IACzB,EAAKG,SAAS,CAAEhB,UAAU,IAC1B,EAAKsB,MAAMQ,QACX,EAAKR,MAAQ,IAAIS,MAAMC,MACtBC,OAAM,SAAAC,GAAG,OAAIf,QAAQC,IAAIc,OA3B5B,EAAKb,MAAQX,EACb,EAAKY,MAAQ,IAAIS,MAAMC,GAHX,E,qDAiCZ,OACE,sBAAK5B,UAAU,MAAf,UACE,qBAAK+B,IAAKC,EAAIhC,UAAU,OAAOiC,IAAI,qBAEjCC,KAAKjB,MAAMR,QACT,gCACE,8BACE,qBAAKsB,IAAKI,EAAKnC,UAAU,OAAOiC,IAAI,eAEtC,qBAAKF,IAAKK,EAAMpC,UAAU,OAAOiC,IAAI,QAEvC,cAAC,EAAD,CACEnC,cAAeoC,KAAKpC,cACpBC,eAAgBmC,KAAKnC,eACrBF,YAAaqC,KAAKrC,YAClBD,SAAUsC,KAAKjB,MAAMrB,kB,GAjDjByC,IAAMC,WCHTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8e759ffd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/commentstripper.79061eb5.gif\";","import React from 'react';\nimport './IdInput.css';\n\nconst IdInput = ({ storeKey, onKeyChange, onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n            <div className='center'>\n                {\n                    storeKey ?\n                        <div>\n                            <label>\n                                API Key has been saved, refresh page to change key.\n                            </label>\n                        </div>\n                        :\n                        <div>\n                            <label for=\"apiKey\">API Key  </label>\n                            {<input type='text' name='apiKey' onChange={onKeyChange} />}\n                        </div>\n                }\n                <div>\n                    <label for=\"videoId\">Video ID  </label>\n                    <input type='text' name='videoId' onChange={onInputChange} />\n                </div>\n                <button\n                    type='submit'\n                    onClick={onButtonSubmit}\n                >Steal Data</button>\n            </div>\n        </div>\n    );\n}\n\nexport default IdInput;","export default __webpack_public_path__ + \"static/media/source.dbf6dd96.gif\";","export default __webpack_public_path__ + \"static/media/stealing.f3f9cef0.gif\";","export default __webpack_public_path__ + \"static/media/ml.693c3fbd.mp3\";","import React from 'react'\nimport CS from './commentstripper.gif';\nimport IdInput from './components/IdInput/IdInput'\nimport load from './source.gif'\nimport ste from './stealing.gif'\nimport './App.css';\nimport song from './ml.mp3'\n\nconst initialState = {\n  apiKey: '',\n  videoId: '',\n  loading: '',\n  storeKey: false\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    this.audio = new Audio(song);\n  }\n\n  onKeyChange = (event) => {\n    this.setState({ apiKey: event.target.value })\n    console.log(this.state)\n  }\n\n  onInputChange = (event) => {\n    this.setState({ videoId: event.target.value })\n    console.log(this.state)\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ loading: true })\n    this.audio.play();\n    fetch('http://localhost:8000/videoId/' + this.state.videoId + \"/\" + this.state.apiKey, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      mode: 'cors',\n    }).then(response => {\n      console.log(response);\n      this.setState({ loading: false });\n      this.setState({ storeKey: true });\n      this.audio.pause();\n      this.audio = new Audio(song);\n    }).catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={CS} className=\"logo\" alt=\"Comment Stripper\" />\n        {\n          this.state.loading ?\n            <div>\n              <div>\n                <img src={ste} className=\"logo\" alt=\"Stealing\" />\n              </div>\n              <img src={load} className=\"logo\" alt=\"\" />\n            </div> :\n            <IdInput\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n              onKeyChange={this.onKeyChange}\n              storeKey={this.state.storeKey}\n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}